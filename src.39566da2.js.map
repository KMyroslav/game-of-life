{"version":3,"sources":["index.js"],"names":["button","document","querySelector","width","getAttribute","canvas","getContext","size","cols","countNeighbours","i","j","arr","neighbours","make2Darray","Array","z","Math","round","random","push","fillStyle","floor","fillRect","clearRect","gameOflife","arrCopy","onBtnClick","window","addEventListener"],"mappings":"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","file":"src.39566da2.js","sourceRoot":"../src","sourcesContent":["/* \nAny live cell with fewer than two live neighbours dies, as if caused by underpopulation.\nAny live cell with more than three live neighbours dies, as if by overcrowding.\nAny live cell with two or three live neighbours lives on to the next generation.\nAny dead cell with exactly three live neighbours becomes a live cell.\n */\nconst button = document.querySelector('.btn');\nconst width = document.querySelector('#canvas').getAttribute('width');\nconst canvas = document.querySelector('#canvas').getContext('2d');\nconst size = (width * 2) / 50;\nconst cols = width / size;\n\nfunction countNeighbours(i, j, cols, arr) {\n  /*\n    let upL = arr[i - 1][j - 1][2];\n    let up = arr[i - 1][j][2];\n    let upR = arr[i - 1][j + 1][2];\n    let L = arr[i][j - 1][2];\n    let central = arr[i][j][2];\n    let R = arr[i][j + 1][2];\n    let downL = arr[i + 1][j - 1][2];\n    let down = arr[i + 1][j][2];\n    let downR = arr[i + 1][j + 1][2];\n    */\n  let neighbours = 0;\n  if (j === 0 && i === 0) {\n    neighbours += arr[i][j + 1][2] + arr[i + 1][j][2] + arr[i + 1][j + 1][2];\n    return neighbours;\n  }\n  if (j === cols - 1 && i === 0) {\n    neighbours += arr[i + 1][j][2] + arr[i][j - 1][2] + arr[i + 1][j - 1][2];\n    return neighbours;\n  }\n  if (j === 0 && i === cols - 1) {\n    neighbours += arr[i][j + 1][2] + arr[i - 1][j][2] + arr[i - 1][j + 1][2];\n    return neighbours;\n  }\n  if (j === cols - 1 && i === cols - 1) {\n    neighbours += arr[i][j - 1][2] + arr[i - 1][j][2] + arr[i - 1][j - 1][2];\n    return neighbours;\n  }\n\n  if (i === 0 && j !== 0 && j !== cols - 1) {\n    neighbours +=\n      arr[i][j - 1][2] +\n      arr[i][j + 1][2] +\n      arr[i + 1][j - 1][2] +\n      arr[i + 1][j][2] +\n      arr[i + 1][j + 1][2];\n    return neighbours;\n  }\n  if (j === 0 && i !== 0 && i !== cols - 1) {\n    neighbours +=\n      arr[i - 1][j][2] +\n      arr[i - 1][j + 1][2] +\n      arr[i][j + 1][2] +\n      arr[i + 1][j][2] +\n      arr[i + 1][j + 1][2];\n    return neighbours;\n  }\n  if (i === cols - 1 && j !== 0 && j !== cols - 1) {\n    neighbours +=\n      arr[i - 1][j - 1][2] +\n      arr[i - 1][j][2] +\n      arr[i - 1][j + 1][2] +\n      arr[i][j - 1][2] +\n      arr[i][j + 1][2];\n    return neighbours;\n  }\n  if (j === cols - 1 && i !== 0 && i !== cols - 1) {\n    neighbours +=\n      arr[i - 1][j - 1][2] +\n      arr[i - 1][j][2] +\n      arr[i][j - 1][2] +\n      arr[i + 1][j - 1][2] +\n      arr[i + 1][j][2];\n    return neighbours;\n  } else {\n    neighbours +=\n      arr[i - 1][j - 1][2] +\n      arr[i - 1][j][2] +\n      arr[i - 1][j + 1][2] +\n      arr[i][j - 1][2] +\n      arr[i][j + 1][2] +\n      arr[i + 1][j - 1][2] +\n      arr[i + 1][j][2] +\n      arr[i + 1][j + 1][2];\n    return neighbours;\n  }\n}\n\nconst make2Darray = function (cols) {\n  const arr = new Array(cols);\n  for (let i = 0; i < cols; i += 1) {\n    arr[i] = new Array(cols);\n  }\n  for (let i = 0; i < cols; i += 1) {\n    for (let j = 0; j < cols; j += 1) {\n      let z = Math.round(Math.random() / 1.85);\n      // if (j % 2 === 0) {\n      //   z = Math.round(Math.random() / 1.5);\n      // }\n      arr[i][j] = [i, j, z];\n    }\n  }\n  for (let i = 0; i < cols; i += 1) {\n    for (let j = 0; j < cols; j += 1) {\n      arr[i][j].push(countNeighbours(i, j, cols, arr));\n      if (arr[i][j][2] === 1) {\n        canvas.fillStyle = `rgb(\n            0,\n            0, \n            ${Math.floor(Math.random() * 255)})`;\n        canvas.fillRect(i * size, j * size, size, size);\n      }\n      if (arr[i][j][2] === 0) {\n        canvas.clearRect(i * size, j * size, size, size);\n      }\n    }\n  }\n  return arr;\n};\n\nconst arr = make2Darray(cols);\n\nfunction gameOflife(arr, cols) {\n  const arrCopy = [...arr];\n  for (let i = 0; i < cols; i += 1) {\n    for (let j = 0; j < cols; j += 1) {\n      let neighbours = countNeighbours(i, j, cols, arrCopy);\n      if (neighbours < 2) {\n        arr[i][j][2] = 0;\n      } else if (neighbours > 3) {\n        arr[i][j][2] = 0;\n      } else if ((arr[i][j][2] === 1 && neighbours === 2) || neighbours === 3) {\n        arr[i][j][2] = 1;\n      } else if (arr[i][j][2] === 0 && neighbours === 3) {\n        arr[i][j][2] = 1;\n      }\n\n      if (arr[i][j][2] === 1) {\n        canvas.fillStyle = `rgb(\n            0,\n            0, \n            ${Math.floor(Math.random() * 255)})`;\n        canvas.fillRect(i * size, j * size, size, size);\n      }\n      if (arr[i][j][2] === 0) {\n        canvas.clearRect(i * size, j * size, size, size);\n      }\n    }\n  }\n}\n\nwindow.addEventListener('keypress', onBtnClick);\n\nfunction onBtnClick() {\n  gameOflife(arr, cols);\n}\n"]}